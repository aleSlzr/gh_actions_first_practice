name: Artifacts
on:
  workflow_dispatch:
  push:
jobs:
  #---------------------------------------
  job_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run linter tool
        run: npm run lint
  #---------------------------------------
  job_test:
    needs: job_lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run test
        run: npm run test
  #---------------------------------------
  job_build:
    needs: job_test
    runs-on: ubuntu-latest
    outputs:
      # access to the 'steps' context value to get the information of this specific
      # 'steps' and get the value of the 'output'
      # contextValue.idOfStepVariableToSave.outputs.outputName
      script-filename: ${{ steps.filename_publish.outputs.script-filename }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: filename_publish
        # this command gets the filename, and it will be saved in an output called 'script-filename'
        run: find dist/assets/*.js -type f -execdir echo 'script-filename={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts # action to upload artifact into github
        uses: actions/upload-artifact@v4
        with:
          name: dist-files # directory where all the data will be stored
          path: dist # directory who will be uploaded
      #   path: | # use pipe to add more that one file paths
      #     dist
      #     package.json
  #---------------------------------------
  job_deploy:
    needs: job_build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls -la
      - name: Output filename
        # contextObject.jobWhoHasTheOutput.outputs.variableWithOutputValue
        run: echo "${{ needs.job_build.outputs.script-filename }}"
      - name: Deploy
        run: echo "Deploying code ..."
